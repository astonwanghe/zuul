2018/09/13 18:02:07.553 [main] INFO  org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@73e22a3d: startup date [Thu Sep 13 18:02:07 CST 2018]; root of context hierarchy
2018/09/13 18:02:07.642 [background-preinit] INFO  org.hibernate.validator.internal.util.Version.<clinit>(Version.java:30) - HV000001: Hibernate Validator 5.3.6.Final
2018/09/13 18:02:07.724 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018/09/13 18:02:07.755 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e47b4863] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018/09/13 18:02:08.089 [main] INFO  org.springframework.boot.SpringApplication.logStartupProfileInfo(SpringApplication.java:593) - No active profile set, falling back to default profiles: default
2018/09/13 18:02:08.100 [main] INFO  org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4b7e96a: startup date [Thu Sep 13 18:02:08 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@73e22a3d
2018/09/13 18:02:08.561 [main] INFO  org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:828) - Overriding bean definition for bean 'counterFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulMetricsConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulMetricsConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration.class]]
2018/09/13 18:02:08.679 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:288) - BeanFactory id=32750b42-98cd-356a-bf6d-15f7e2b1102c
2018/09/13 18:02:08.693 [main] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018/09/13 18:02:08.790 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$fa8deba7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018/09/13 18:02:08.875 [main] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e47b4863] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018/09/13 18:02:09.114 [main] INFO  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:92) - Tomcat initialized with port(s): 5555 (http)
2018/09/13 18:02:09.124 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:180) - Initializing ProtocolHandler ["http-nio-5555"]
2018/09/13 18:02:09.130 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:180) - Starting service [Tomcat]
2018/09/13 18:02:09.131 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:180) - Starting Servlet Engine: Apache Tomcat/8.5.31
2018/09/13 18:02:09.221 [localhost-startStop-1] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:180) - Initializing Spring embedded WebApplicationContext
2018/09/13 18:02:09.221 [localhost-startStop-1] INFO  org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.prepareEmbeddedWebApplicationContext(EmbeddedWebApplicationContext.java:276) - Root WebApplicationContext: initialization completed in 1121 ms
2018/09/13 18:02:09.853 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.ServletRegistrationBean.onStartup(ServletRegistrationBean.java:191) - Mapping servlet: 'dispatcherServlet' to [/]
2018/09/13 18:02:09.854 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.ServletRegistrationBean.onStartup(ServletRegistrationBean.java:191) - Mapping servlet: 'zuulServlet' to [/zuul/*]
2018/09/13 18:02:09.857 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:259) - Mapping filter: 'metricsFilter' to: [/*]
2018/09/13 18:02:09.857 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:259) - Mapping filter: 'characterEncodingFilter' to: [/*]
2018/09/13 18:02:09.857 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:259) - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018/09/13 18:02:09.858 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:259) - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018/09/13 18:02:09.858 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:259) - Mapping filter: 'requestContextFilter' to: [/*]
2018/09/13 18:02:09.858 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:259) - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018/09/13 18:02:09.858 [localhost-startStop-1] INFO  org.springframework.boot.web.servlet.AbstractFilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:259) - Mapping filter: 'applicationContextIdFilter' to: [/*]
2018/09/13 18:02:09.888 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2018/09/13 18:02:09.889 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018/09/13 18:02:09.893 [main] INFO  com.netflix.config.DynamicPropertyFactory.getInstance(DynamicPropertyFactory.java:281) - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1907874b
2018/09/13 18:02:10.059 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:121) - No URLs will be polled as dynamic configuration sources.
2018/09/13 18:02:10.059 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>(URLConfigurationSource.java:122) - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018/09/13 18:02:10.265 [main] INFO  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4b7e96a: startup date [Thu Sep 13 18:02:08 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@73e22a3d
2018/09/13 18:02:10.439 [main] INFO  org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018/09/13 18:02:10.440 [main] INFO  org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018/09/13 18:02:10.471 [main] INFO  org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018/09/13 18:02:10.472 [main] INFO  org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018/09/13 18:02:10.505 [main] INFO  org.springframework.web.servlet.handler.AbstractUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018/09/13 18:02:10.941 [main] INFO  org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018/09/13 18:02:10.942 [main] INFO  org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018/09/13 18:02:10.943 [main] INFO  org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018/09/13 18:02:10.943 [main] INFO  org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018/09/13 18:02:10.944 [main] INFO  org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018/09/13 18:02:10.944 [main] INFO  org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018/09/13 18:02:10.945 [main] INFO  org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018/09/13 18:02:10.945 [main] INFO  org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/filters || /filters.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018/09/13 18:02:10.946 [main] INFO  org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018/09/13 18:02:10.949 [main] INFO  org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/routes || /routes.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.netflix.zuul.RoutesMvcEndpoint.reset()
2018/09/13 18:02:10.949 [main] INFO  org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/routes || /routes.json],methods=[GET],params=[format],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.cloud.netflix.zuul.RoutesMvcEndpoint.invokeRouteDetails(java.lang.String)
2018/09/13 18:02:10.949 [main] INFO  org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/routes || /routes.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018/09/13 18:02:10.950 [main] INFO  org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018/09/13 18:02:10.951 [main] INFO  org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018/09/13 18:02:10.952 [main] INFO  org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018/09/13 18:02:10.952 [main] INFO  org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018/09/13 18:02:10.953 [main] INFO  org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018/09/13 18:02:10.953 [main] INFO  org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018/09/13 18:02:10.954 [main] INFO  org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018/09/13 18:02:10.954 [main] INFO  org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018/09/13 18:02:10.954 [main] INFO  org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018/09/13 18:02:10.955 [main] INFO  org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018/09/13 18:02:10.955 [main] INFO  org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2018/09/13 18:02:10.955 [main] INFO  org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2018/09/13 18:02:10.956 [main] INFO  org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018/09/13 18:02:10.956 [main] INFO  org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018/09/13 18:02:10.956 [main] INFO  org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018/09/13 18:02:10.957 [main] INFO  org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018/09/13 18:02:10.957 [main] INFO  org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018/09/13 18:02:11.386 [main] INFO  org.springframework.cloud.netflix.zuul.ZuulFilterInitializer.contextInitialized(ZuulFilterInitializer.java:65) - Starting filter initializer
2018/09/13 18:02:11.469 [main] INFO  org.springframework.jmx.export.MBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2018/09/13 18:02:11.477 [main] INFO  org.springframework.jmx.export.MBeanExporter.autodetect(MBeanExporter.java:918) - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018/09/13 18:02:11.477 [main] INFO  org.springframework.jmx.export.MBeanExporter.autodetect(MBeanExporter.java:918) - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018/09/13 18:02:11.478 [main] INFO  org.springframework.jmx.export.MBeanExporter.autodetect(MBeanExporter.java:918) - Bean with name 'environmentManager' has been autodetected for JMX exposure
2018/09/13 18:02:11.478 [main] INFO  org.springframework.jmx.export.MBeanExporter.autodetect(MBeanExporter.java:918) - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2018/09/13 18:02:11.479 [main] INFO  org.springframework.jmx.export.MBeanExporter.autodetect(MBeanExporter.java:918) - Bean with name 'routesEndpoint' has been autodetected for JMX exposure
2018/09/13 18:02:11.479 [main] INFO  org.springframework.jmx.export.MBeanExporter.autodetect(MBeanExporter.java:918) - Bean with name 'routesMvcEndpoint' has been autodetected for JMX exposure
2018/09/13 18:02:11.479 [main] INFO  org.springframework.jmx.export.MBeanExporter.autodetect(MBeanExporter.java:918) - Bean with name 'filtersEndpoint' has been autodetected for JMX exposure
2018/09/13 18:02:11.480 [main] INFO  org.springframework.jmx.export.MBeanExporter.autodetect(MBeanExporter.java:918) - Bean with name 'refreshScope' has been autodetected for JMX exposure
2018/09/13 18:02:11.482 [main] INFO  org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:679) - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018/09/13 18:02:11.491 [main] INFO  org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:679) - Located managed bean 'routesEndpoint': registering with JMX server as MBean [org.springframework.cloud.netflix.zuul:name=routesEndpoint,type=RoutesEndpoint]
2018/09/13 18:02:11.493 [main] WARN  org.springframework.jmx.export.MBeanExporter.getMBeanInfo(MBeanExporter.java:851) - Bean with key 'routesEndpoint' has been registered as an MBean but has no exposed attributes or operations
2018/09/13 18:02:11.494 [main] INFO  org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:679) - Located managed bean 'routesMvcEndpoint': registering with JMX server as MBean [org.springframework.cloud.netflix.zuul:name=routesMvcEndpoint,type=RoutesMvcEndpoint]
2018/09/13 18:02:11.501 [main] INFO  org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:679) - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2018/09/13 18:02:11.505 [main] INFO  org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:679) - Located managed bean 'filtersEndpoint': registering with JMX server as MBean [org.springframework.cloud.netflix.zuul:name=filtersEndpoint,type=FiltersEndpoint]
2018/09/13 18:02:11.505 [main] WARN  org.springframework.jmx.export.MBeanExporter.getMBeanInfo(MBeanExporter.java:851) - Bean with key 'filtersEndpoint' has been registered as an MBean but has no exposed attributes or operations
2018/09/13 18:02:11.506 [main] INFO  org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:679) - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018/09/13 18:02:11.514 [main] INFO  org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:679) - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=4b7e96a,type=ConfigurationPropertiesRebinder]
2018/09/13 18:02:11.517 [main] INFO  org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:679) - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018/09/13 18:02:11.518 [main] INFO  org.springframework.jmx.export.MBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2018/09/13 18:02:11.526 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) - Starting beans in phase 0
2018/09/13 18:02:11.532 [main] INFO  org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:71) - Setting initial instance status as: STARTING
2018/09/13 18:02:11.559 [main] INFO  com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:347) - Initializing Eureka in region us-east-1
2018/09/13 18:02:11.596 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:70) - Using JSON encoding codec LegacyJacksonJson
2018/09/13 18:02:11.596 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:71) - Using JSON decoding codec LegacyJacksonJson
2018/09/13 18:02:11.684 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:80) - Using XML encoding codec XStreamXml
2018/09/13 18:02:11.684 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>(DiscoveryJerseyProvider.java:81) - Using XML decoding codec XStreamXml
2018/09/13 18:02:11.855 [main] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints(ConfigClusterResolver.java:43) - Resolving eureka endpoints via configuration
2018/09/13 18:02:11.935 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:934) - Disable delta property : false
2018/09/13 18:02:11.936 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:935) - Single vip registry refresh property : null
2018/09/13 18:02:11.936 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:936) - Force full registry fetch : false
2018/09/13 18:02:11.936 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:937) - Application is null : false
2018/09/13 18:02:11.936 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:938) - Registered Applications size is zero : true
2018/09/13 18:02:11.936 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:940) - Application version is -1: true
2018/09/13 18:02:11.936 [main] INFO  com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1023) - Getting all instance registry info from the eureka server
2018/09/13 18:02:12.045 [main] INFO  com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1032) - The response status is 200
2018/09/13 18:02:12.047 [main] INFO  com.netflix.discovery.DiscoveryClient.initScheduledTasks(DiscoveryClient.java:1258) - Starting heartbeat executor: renew interval is: 5
2018/09/13 18:02:12.048 [main] INFO  com.netflix.discovery.InstanceInfoReplicator.<init>(InstanceInfoReplicator.java:59) - InstanceInfoReplicator onDemand update allowed rate per min is 4
2018/09/13 18:02:12.050 [main] INFO  com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:434) - Discovery Client initialized at timestamp 1536832932050 with initial instances count: 2
2018/09/13 18:02:12.055 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:40) - Registering application api-gateway with eureka with status UP
2018/09/13 18:02:12.055 [main] INFO  com.netflix.discovery.DiscoveryClient$3.notify(DiscoveryClient.java:1293) - Saw local status change event StatusChangeEvent [timestamp=1536832932055, current=UP, previous=STARTING]
2018/09/13 18:02:12.057 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:804) - DiscoveryClient_API-GATEWAY/wanghe:api-gateway:5555: registering service...
2018/09/13 18:02:12.062 [main] INFO  org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:679) - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018/09/13 18:02:12.068 [main] INFO  org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:679) - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018/09/13 18:02:12.074 [main] INFO  org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:679) - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018/09/13 18:02:12.076 [main] INFO  org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:679) - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018/09/13 18:02:12.078 [main] INFO  org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:679) - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018/09/13 18:02:12.080 [main] INFO  org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:679) - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018/09/13 18:02:12.083 [main] INFO  org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:679) - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018/09/13 18:02:12.084 [main] INFO  org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:679) - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018/09/13 18:02:12.086 [main] INFO  org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:679) - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018/09/13 18:02:12.089 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:813) - DiscoveryClient_API-GATEWAY/wanghe:api-gateway:5555 - registration status: 204
2018/09/13 18:02:12.090 [main] INFO  org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:679) - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018/09/13 18:02:12.092 [main] INFO  org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:679) - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018/09/13 18:02:12.094 [main] INFO  org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:679) - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018/09/13 18:02:12.095 [main] INFO  org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:679) - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018/09/13 18:02:12.097 [main] INFO  org.springframework.jmx.export.MBeanExporter.registerBeanInstance(MBeanExporter.java:679) - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018/09/13 18:02:12.097 [main] INFO  org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:341) - Starting beans in phase 2147483647
2018/09/13 18:02:12.100 [main] INFO  org.springframework.cloud.netflix.hystrix.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration.start(HystrixCircuitBreakerConfiguration.java:138) - Starting poller
2018/09/13 18:02:12.115 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:180) - Starting ProtocolHandler ["http-nio-5555"]
2018/09/13 18:02:12.124 [main] INFO  org.apache.juli.logging.DirectJDKLog.log(DirectJDKLog.java:180) - Using a shared selector for servlet write/read
2018/09/13 18:02:12.134 [main] INFO  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:216) - Tomcat started on port(s): 5555 (http)
2018/09/13 18:02:12.135 [main] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:124) - Updating port to 5555
2018/09/13 18:02:12.139 [main] INFO  org.springframework.boot.StartupInfoLogger.logStarted(StartupInfoLogger.java:57) - Started Application in 4.962 seconds (JVM running for 5.972)
